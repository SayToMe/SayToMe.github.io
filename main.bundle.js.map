{"version":3,"sources":["E:/Github/SayToMe.github.io/CIPerformanceView/src/$_gendir lazy","E:/Github/SayToMe.github.io/CIPerformanceView/src/app/app.component.css","E:/Github/SayToMe.github.io/CIPerformanceView/src/app/app.component.html","E:/Github/SayToMe.github.io/CIPerformanceView/src/app/app.component.ts","E:/Github/SayToMe.github.io/CIPerformanceView/src/app/app.module.ts","E:/Github/SayToMe.github.io/CIPerformanceView/src/environments/environment.ts","E:/Github/SayToMe.github.io/CIPerformanceView/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Github/SayToMe.github.io/CIPerformanceView/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Github/SayToMe.github.io/CIPerformanceView/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<span class=\\\"pull-right\\\" *ngIf=\\\"user\\\">Logged as {{user.name || 'Unknown'}}</span>\\n<span class=\\\"pull-right\\\" *ngIf=\\\"!user\\\">Authorizing</span>\\n\\n<!-- <a href=\\\"https://api.travis-ci.com/auth/handshake\\\">log in</a> -->\\n\\n<h3>Builds</h3>\\n<table *ngIf=\\\"builds\\\">\\n  <thead>\\n    <th>Number</th>\\n    <th>Finished</th>\\n    <th>State</th>\\n    <th>Message</th>\\n    <th>Misc</th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let build of builds\\\">\\n      <td>\\n          {{build.number}}\\n      </td>\\n      <td>\\n         {{build.finished_at}}\\n      </td>\\n      <td>\\n          {{build.state}}\\n      </td>\\n      <td>\\n          {{build.commit.message}}\\n      </td>\\n      <td>\\n        <ul>\\n          <li *ngFor=\\\"let job of build.jobs\\\">\\n            Run: {{job.parsed.testsNum}}. Failures: {{job.parsed.failures}}. Time: {{job.parsed.time}}.\\n          </li>\\n        </ul>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Github/SayToMe.github.io/CIPerformanceView/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/operators/map';\n\ninterface IUser {\n  id: number;\n  name: string;\n  login: string;\n  email: string;\n  gravatar_id: string;\n  avatar_url: string;\n  locale: string;\n  is_syncing: boolean;\n  synced_at: string;\n  correct_scopes: boolean;\n  created_at: string;\n  channels: string[];\n}\n\ninterface IBuild {\n  commit_id: number;\n  config: Object;\n  duration: number;\n  finished_at: string;\n  id: number;\n  job_ids: number[];\n  number: string;\n  pull_request: boolean;\n  pull_request_number: string;\n  pull_request_title: string;\n  repository_id: number;\n  started_at: string;\n  state: string;\n\n  commit: ICommit;\n  logs: any[];\n  jobs: IJob[];\n}\n\ninterface ICommit {\n  author_email: string;\n  author_name: string;\n  branch: string;\n  committed_at: string;\n  committer_email: string;\n  committer_name: string;\n  compare_url: string;\n  id: number;\n  message: string;\n  pull_request_number?: number;\n  sha: string;\n  tag?: string;\n}\n\ninterface IJob {\n  id: number;\n  repository_id: number;\n  repository_slug: string;\n  stage_id?: number;\n  build_id: number;\n  commit_id: number;\n  number: string;\n  config: {\n    language: string;\n    sudo: boolean,\n    before_install: string[];\n    script: string[];\n    result: string;\n    group: string;\n    dist: string;\n    os: string\n  };\n  state: string;\n  started_at: string;\n  finished_at: string;\n  queue: string;\n  allow_failure: boolean;\n  tags?: string;\n  annotation_ids: number[];\n\n  log: string;\n  parsed;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  user: IUser;\n  builds: IBuild[];\n\n  constructor(private httpClient: HttpClient) {\n    this.auth();\n    this.getBuilds();\n  }\n\n  private auth() {\n    const headers = this.getHeaders();\n\n    return this.httpClient.get('https://api.travis-ci.org/users', {\n      headers: headers\n    })\n      .toPromise()\n      .then((res: { user: IUser }) => {\n        this.user = res.user;\n\n        return res.user;\n      });\n  }\n\n  private getBuilds() {\n    const headers = this.getHeaders();\n    const params = new HttpParams();\n\n    this.httpClient.get('https://api.travis-ci.org/repos/SayToMe/Solve/builds', {\n      headers: headers\n    })\n      .toPromise()\n      .then((res: { builds: IBuild[], commits: ICommit[] }) => {\n        this.builds = res.builds;\n        this.builds.forEach(build => {\n          build.commit = res.commits.find(c => c.id === build.commit_id);\n        });\n\n        this.builds.forEach(build => {\n          build.jobs = [];\n\n          build.job_ids.forEach((jobId) => {\n            return this.httpClient.get('https://api.travis-ci.org/jobs/' + jobId, {\n              headers: headers\n            })\n            .toPromise()\n            .then((r: { job: IJob, commit: ICommit }) => {\n              build.jobs.push(r.job);\n\n              return this.httpClient.get('https://api.travis-ci.org/jobs/' + r.job.id + '/log', { responseType: 'text' })\n              .toPromise()\n              .then((log: string) => {\n                  r.job.log = log;\n                  r.job.parsed = this.parseLog(log);\n              });\n            });\n          });\n        });\n\n        return res.builds;\n      });\n  }\n\n  private parseLog(log: string) {\n    const lines = log.split(/[\\r\\n]/);\n\n    const r = /Execution Runtime: /;\n    const r2 = /Tests run: (\\d+), Errors: (\\d+), Failures: (\\d+), Inconclusive: (\\d+), Time: (.+?) seconds/;\n    const testCheck = /\\*\\*\\*\\*\\*/;\n\n    const startTestLineIdx = lines.findIndex(l => r.test(l));\n    const endTestLineIdx = lines.findIndex(l => r2.test(l));\n\n    const tests = lines.slice(startTestLineIdx, endTestLineIdx).filter(l => testCheck.test(l)).map(l => l.match(/\\.(.+?)$/)[1]);\n    const [_, testsNum, errors, failures, inconclusive, time] = lines[endTestLineIdx].match(r2);\n\n    return {\n      testsNum: testsNum,\n      errors: errors,\n      failures: failures,\n      inconclusive: inconclusive,\n      time: time\n    };\n  }\n\n  private getHeaders() {\n    const headers = new HttpHeaders({\n      'Accept': 'application/vnd.travis-ci.2+json',\n      'Authorization': 'token \"uJeDK6yjk6Gt9HtfRNec-w\"'\n    });\n\n    return headers;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/Github/SayToMe.github.io/CIPerformanceView/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// E:/Github/SayToMe.github.io/CIPerformanceView/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// E:/Github/SayToMe.github.io/CIPerformanceView/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// E:/Github/SayToMe.github.io/CIPerformanceView/src/main.ts"],"sourceRoot":"webpack:///"}